#!/usr/bin/bash
# create docker image: shisa-docker-<rocm version>
# expose rdh
rdh_root="$(realpath $0|xargs dirname)/.."
source ${rdh_root}/activate

# expose self
bin_dir=$(realpath $0|xargs dirname)
SELF_TAG="[$(basename $0)]"

# import tools
source docker-helper
source s-config

# run at host
if is_inside_docker; then
    die "fail: cannot run inside docker!"
fi

# build from rocm internal image?
rocm_base="rocm/dev-ubuntu-${rocm_os_version}:${rocm_version}"
if [[ ! -z "$rocm_internal_image" ]]; then
    # pull if not in local 
    if ! docker image inspect "${rocm_internal_image}" &>/dev/null; then
        if docker pull "${rocm_internal_image}"; then
            log "succ: ${rocm_internal_image} pulled to local"
        else
            die "fail: pull ${rocm_internal_image}"
        fi
    else
        log "${rocm_internal_image} is already in local"
    fi
    rocm_base="${rocm_internal_image}"
fi

# dockerfile
docker_file="${rdh_root}/dockerfile/shisa.dockerfile"

# close old instance
close_container "$instance_name"

# docker build
log "docker build: $image_name"
if ! docker build -t "$image_name" `
                 `-f $docker_file `
                 `--build-arg ROCM_BASE="$rocm_base" `
                 `--build-arg ROCM_VERSION=$rocm_version `
                 `--build-arg ROCM_OS_VERSION=$rocm_os_version `
                 `--build-arg SP3_ASIC=$SP3_ASIC `
                 `--build-arg TT_OPTS="$TT_OPTS" .; then
    die "fail to build: $image_name"
fi
log "docker build success: $image_name"
