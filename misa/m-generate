#!/bin/bash
# make tools available
bin_dir=$(realpath $0|xargs dirname)
util_dir=$(dirname $bin_dir)/scripts/util
shisa_dir=$(dirname $bin_dir)/shisa
PATH=${bin_dir}:${util_dir}:${shisa_dir}:$PATH
SELF_TAG="[$(basename $0)]"

# import tools
source tools
source docker-helper
source s-config
source m-config

function generate_misa_942() {
    local misa_root="$(realpath .)/$misa_branch"
    local misa_conv_test_root="${shisa_root}/test_apps/misa_conv_test"
    local work_dir="$(realpath $work_root)"

    local sp3_dir="$work_dir/misa_new_sp3"
    local misa_dir="$work_dir/misa_new"

    mkdir -p $sp3_dir
    local curr=1
    local dir
    local type

    for dir in fwd bwd wrw; do
        for type in fp32 fp16 bf16; do
            local conf_dir=$misa_dir/${dir}_${type}
            mkdir -p $conf_dir
            log "======================================="
            log "$curr. ${dir}_${type}"
            (( curr = curr + 1))

            local tool_codegen="${misa_root}/igemm_codegen.py"
            local kernel="igemm_${dir}_gtc_${GFX_VERSION}_nhwc_${type}"
            local config="${misa_root}/config/${kernel}.config"

            # igemm_codegen.py can only work inside $misa_root
            pushd "$misa_root"
            if ! python3 "$tool_codegen"  "$config"; then
                die "fail: build\n     $tool_codegen $config"
            fi
            cp out/* $conf_dir/
            popd

            local tool_misa2sp3="${misa_conv_test_root}/scripts/misa2sp3.pl"
            local asm_file="$conf_dir/${kernel}.s"
            if ! perl -S "${tool_misa2sp3}" -o "$sp3_dir" "$asm_file"; then
                die "fail: misa to sp3 $asm_file"
            fi
        done
    done

    touch /SHISA/sp3_config.log
    cp ${misa_conv_test_root}/misa_util_sp3/* "$sp3_dir"
    curr=1
    local sp3_file
    for sp3_file in $sp3_dir/igemm*.sp3 $sp3_dir/zero_mem*.sp3 $sp3_dir/tensor_cast*.sp3; do
        local base_path=${sp3_file%.*}
        local base_name=${base_path##*/}
        echo "$curr. $base_name"
        if ! "${shisa_root}/bin/shader_build" "${base_path}.sp3" -a "$SP3_ASIC" --elf-abi HSA --elf-out ${base_path}.elf  > /dev/null; then
            die "fail to build: \n ${shisa_root}/bin/shader_build "${base_path}.sp3" -a $SP3_ASIC --elf-abi HSA --elf-out ${base_path}.elf"
        fi
        (( curr = curr + 1))
    done
    mkdir -p /SHISA/ref_cache
}

function generate_misa_950() {
    local misa_root="$(realpath .)/$misa_branch"
    local misa_conv_test_root="${shisa_root}/test_apps/misa_conv_test"
    local work_dir="$(realpath $work_root)"

    local sp3_dir="$work_dir/misa_new_sp3"
    local misa_dir="$work_dir/misa_new"

    mkdir -p $sp3_dir
    local curr=1
    local dir
    local type

    for dir in fwd bwd wrw; do
        for type in fp32 fp16 bf16; do
            local conf_dir=$misa_dir/${dir}_${type}
            mkdir -p $conf_dir
            log "======================================="
            log "$curr. ${dir}_${type}"
            (( curr = curr + 1))

            local tool_codegen="${misa_root}/igemm_codegen.py"
            local kernel="igemm_${dir}_gtc_${GFX_VERSION}_nhwc_${type}"
            local config="${misa_root}/config/${kernel}.config"

            # igemm_codegen.py can only work inside $misa_root
            pushd "$misa_root"
            if ! python3 "$tool_codegen"  "$config"; then
                die "fail: build\n     $tool_codegen $config"
            fi
            cp out/* $conf_dir/
            popd

            local tool_misa2sp3="${misa_conv_test_root}/scripts/misa2ssp.pl"
            local asm_file="$conf_dir/${kernel}.s"
            if ! perl -S "${tool_misa2sp3}" -o "$sp3_dir" "$asm_file"; then
                die "fail: misa to sp3 $asm_file"
            fi
        done
    done

    touch /SHISA/sp3_config.log
    cp ${misa_conv_test_root}/misa_util_sp3/* "$sp3_dir"
    curr=1
    local ssp_file
    for ssp_file in $sp3_dir/igemm*.ssp $sp3_dir/zero_mem*.sp3 $sp3_dir/tensor_cast*.sp3; do
        local base_path=${ssp_file%.*}
        local base_name=${base_path##*/}
        echo "$curr. $base_name"
        if ! "${shisa_root}/bin/shader_build" "$ssp_file" -a "$SP3_ASIC" --elf-abi HSA --elf-out ${base_path}.elf  > /dev/null; then
            die "fail to build: \n ${shisa_root}/bin/shader_build $ssp_file -a $SP3_ASIC --elf-abi HSA --elf-out ${base_path}.elf"
        fi
        (( curr = curr + 1))
    done
    mkdir -p /SHISA/ref_cache
}

# run inside docker instance of $instance_name
if ! is_docker_instance $instance_name; then
    die "fail: please run it at instance: $instance_name"
fi

# generate misa shader
case ${GFX_VERSION} in
    gfx950)
        generate_misa_950;;
    gfx942)
        generate_misa_942;;
    *)die "fail: unknown ${GFX_VERSION}";;
esac