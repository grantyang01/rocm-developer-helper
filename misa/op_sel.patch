diff --git a/python/igemm/igemm_wrw_gtc_nhwc.py b/python/igemm/igemm_wrw_gtc_nhwc.py
index 9418ce1..83ad9b7 100755
--- a/python/igemm/igemm_wrw_gtc_nhwc.py
+++ b/python/igemm/igemm_wrw_gtc_nhwc.py
@@ -878,13 +878,13 @@ class igemm_wrw_gtc_nhwc_t(mc_base_t):
                                         self._emit(f'.if {fp16_alt_impl_pds} == 1')
                                         self._emit(f"v_cvt_f32_f16 v[{self.v_tmp2(0)}], v[{self.v_src(idx_0)}]{src0_sel}")
                                         self._emit(f"v_cvt_f32_f16 v[{self.v_tmp2(1)}], v[{self.v_src(idx_1)}]{src0_sel}")
-                                        self._emit(f"v_pack_b32_f16 v[{self.v_pack_k_tmp(i_ds_write_pack * 2 + i_pk)}], v[{self.v_tmp2(0)}], v[{self.v_tmp2(1)}]  op_sel:[1, 1]")
+                                        self._emit(f"v_pack_b32_f16 v[{self.v_pack_k_tmp(i_ds_write_pack * 2 + i_pk)}], v[{self.v_tmp2(0)}], v[{self.v_tmp2(1)}]  op_sel:[1, 1, 0]")
                                         self._emit(f'.else')
-                                        op_sel = '' if (i_gemmk * num_ds_write_pack + i_ds_write_pack) % 2 == 0 else ' op_sel:[1, 1]'
+                                        op_sel = '' if (i_gemmk * num_ds_write_pack + i_ds_write_pack) % 2 == 0 else ' op_sel:[1, 1, 0]'
                                         self._emit(f"v_pack_b32_f16 v[{self.v_pack_k_tmp(i_ds_write_pack * 2 + i_pk)}], v[{self.v_src(idx_0)}], v[{self.v_src(idx_1)}]{op_sel}")
                                         self._emit(f'.endif')
                                     else:
-                                        op_sel = '' if (i_gemmk * num_ds_write_pack + i_ds_write_pack) % 2 == 0 else ' op_sel:[1, 1]'
+                                        op_sel = '' if (i_gemmk * num_ds_write_pack + i_ds_write_pack) % 2 == 0 else ' op_sel:[1, 1, 0]'
                                         # print(f"i_pk:{i_pk}, i_c:{i_c}, idx_0:{idx_0}, idx_1:{idx_1}")
                                         self._emit(f"v_pack_b32_f16 v[{self.v_pack_k_tmp(i_ds_write_pack * 2 + i_pk)}], v[{self.v_src(idx_0)}], v[{self.v_src(idx_1)}]{op_sel}")
                             self._emit(ds_write(self.v_sst_os(), self.v_pack_k_tmp(), i_gemmk * stride_d_mn))
diff --git a/python/operations/utility.py b/python/operations/utility.py
index 1f5d47d..c972e6a 100644
--- a/python/operations/utility.py
+++ b/python/operations/utility.py
@@ -569,7 +569,7 @@ class macro_packhi_b32_t(macro_base_t):
 
     def expr(self):
         if DBG_USE_PACK_F16_FOR_BF16:
-            self._emit(f"v_pack_b32_f16 v[{self.v_dst()}], v[{self.v_a()}], v[{self.v_b()}] op_sel:[1, 1]")
+            self._emit(f"v_pack_b32_f16 v[{self.v_dst()}], v[{self.v_a()}], v[{self.v_b()}] op_sel:[1, 1, 0]")
         else:
             self._emit(f"v_lshrrev_b32  v[{self.v_dst()}], 16, v[{self.v_b()}]")
             self._emit(f"v_alignbit_b32 v[{self.v_dst()}], v[{self.v_dst()}], v[{self.v_a()}], 16")
