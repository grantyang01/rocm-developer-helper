#!/bin/bash
rdh_root="$(realpath $0|xargs dirname)/.."
source ${rdh_root}/activate

# expose self
bin_dir=$(realpath $0|xargs dirname)
SELF_TAG="[$(basename $0)]"

# import tools
source docker-helper
source rd-config
source sv-config

# run inside docker instance of $instance_name_rd
if ! is_docker_instance $instance_name_rd && \ 
   ! is_docker_instance $instance_name_sv ; then
    die "fail: please run it at instance: $instance_name_rd"
fi

function clone_component() {
    local comp=${1%/*}
    local branch=${1#*/}

    log "clone: $comp"
    local src_dir=$(realpath ${solver_src_root})/${comp,,}    
    refresh_dir "${src_dir}"
    local rocm_url="https://github.com/ROCm/${comp}"
    if ! git clone "${rocm_url}" -b ${branch} ${src_dir}; then
        die "fail: clone $comp"
    fi
}

function build_component() {
    local comp=${1%/*}
    local branch=${1#*/}
    local src_dir=$(realpath ${solver_src_root})/${comp,,}

    pushd "$src_dir"
    if [[ "$comp" == "rocPRIM" ]]; then
        # build and install
        if ! elevate_if_not_root ./install -ri; then
            die "fail: build and install $comp"
        fi
    elif [[ "$comp" == "hipBLAS-common" ]]; then
        if ! cmake -S . -B ./build; then
            die "fail: cmake $comp"
        fi

        # build and install
        pushd ./build
        if ! elevate_if_not_root make install; then
            die "fail: build pkg and install $comp"
        fi
        popd
    elif [[ "$comp" == "hipBLASLt" || "$comp" == "rocBLAS" ]]; then
        # release and depencies
        if ! ./install.sh -rd; then
            die "fail: build and install $comp"
        fi

        # install release
        pushd ./build/release
        elevate_if_not_root make install
        popd

        # debug
        if ! ./install.sh -rg; then
            die "fail: build and install $comp"
        fi
    elif [[ "$comp" == "rocSOLVER" ]]; then
        # release build depencies, no optimization
        if ! ./install.sh -rcnd; then
            die "fail: build and install $comp"
        fi
        # install release
        pushd ./build/release
        elevate_if_not_root make install
        popd

        # debug
        if ! ./install.sh -rgn; then
            die "fail: build and install $comp"
        fi
    fi
    popd
}

components="rocPRIM/develop `
           `hipBLAS-common/develop `
           `hipBLASLt/develop `
           `rocBLAS/develop `
           `rocSOLVER/develop"

for curr in  $components; do
    clone_component "$curr"
done

for curr in  $components; do
    build_component "$curr"
done
return 0